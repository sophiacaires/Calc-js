:root {
    --bg-body: #0b0c0f;
    --bg-calc: #22252d;
    --bg-keyboard: #292d32;
    --bg-key: #262933;
    --text-color: #fefefe;
    --bg-modal: #069b80;
    --lbl-modal: 1;
    --primary-text: #26fed7;
    --secondary-text: #eb6666;
}

.barbie {
    --bg-body: #0f0007;
    --bg-calc: #2d0018;
    --bg-keyboard: #32001c;
    --bg-key: #33001b;
    --text-color: #fefefe;
    --bg-modal: #9b064c;
    --lbl-modal: 1;
    --primary-text: #f3c10a;
    --secondary-text: #ff811a;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: sans-serif;
}

body {
    background-color: var(--bg-body);
    position: relative;
}

.app {
    display: flex;
    position: relative;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.calc {
    background-color: var(--bg-calc);
    width: 100%;
    max-width: 375px;
    min-height: 640px;
    display: flex;
    flex-direction: column;
    border-radius: 1.5rem;
    overflow: hidden;
    position: relative;
}

#btn-config {
    background-color: var(--bg-keyboard);
    padding: 0.5rem;
    border-color: transparent;
    border-radius: 1rem 0;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 0;
    left: 0;
    box-shadow: 0px -2px 16px rgba(0, 0, 0, 0.2);
    transition: all 0.3s;
}

#btn-config svg {
    height: 32px;
    fill: var(--text-color);
}

#btn-config:hover {
    transition: all 0.3s;
    filter: brightness(120%);
}

#mask {
    position: absolute;
    width: 100vw;
    height: 100vh;
    z-index: 5;
    display: none;
    background-color: rgba(0, 0, 0, 0.8);
}

#modal {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    min-width: 18rem;
    z-index: 10;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 1.5rem;
    padding: 1.5rem 2.5rem;
    visibility: collapse;
    color: var(--text-color);
    background-color: var(--bg-calc);
    gap: 1rem;
}

#modal-close {
    all: unset;
    top: -10px;
    right: 0;
    font-size: 1.8rem;
    font-weight: bold;
    text-align: end;
    width: 100%;
}

#modal-switch {
    height: 0;
    width: 0;
}

label {
	cursor: pointer;
	color: transparent;
	width: 5rem;
	height: 2.5rem;
    margin-bottom: 1.5rem;
    filter: grayscale(100%);
	background: var(--bg-modal);
	display: block;
	border-radius: 100px;
	position: relative;
}

label::after {
	content: '';
	position: absolute;
	top: 4px;
	left: 5px;
	width: 2rem;
	height: 2rem;
    filter: invert(var(--lbl-modal));
	background-color: white;
	border-radius: 90px;
	transition: 0.3s;
}

input:checked + label {
    filter: grayscale(0%);
	background: var(--bg-modal);
}

input:checked + label::after {
	left: calc(100% - 5px);
	transform: translateX(-100%);
}

label:active::after {
	width: 2em;
}
/*FIM MODAL*/

.display {
    min-height: 10rem;
    padding: 1.5rem;
    display: flex;
    justify-content: flex-end;
    align-items: flex-end;
    color: var(--text-color);
    text-align: right;
    flex: 1 1 0%;
}

.display .input {
    font-size: 1.25rem;
    margin-bottom: 0.5rem;
}

.display .output {
    font-size: 3rem;
    font-weight: 700;
    max-width: 100%;
    overflow: auto;
}

.display .operator {
    color: var(--secondary-text);
}

.display .brackets, 
.display .percent {
    color: var(--primary-text);
}

.keys {
    background-color: var(--bg-keyboard);
    padding: 1.5rem;
    border-radius: 1.5rem 1.5rem 0 0;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(5, 1fr);
    grid-gap: 1rem;
    box-shadow: 0px -2px 16px rgba(0, 0, 0, 0.2);
}

.keys .key {
    position: relative;
    cursor: pointer;

    display: block;
    height: 0;
    padding-top: 100%;
    background-color: var(--bg-key);
    border-radius: 1rem;
    transition: 0,2s;
    user-select: none;
}

.keys .key span {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    font-size: 2rem;
    font-weight: 700;
    color: var(--text-color);
}

.keys .key:hover {
    box-shadow: inset 0px 0px 8px rgba(0, 0, 0, 0.2);
}

.keys .key.operator span {
    color: var(--secondary-text);
}

.keys .key.action span {
    color: var(--primary-text);
}